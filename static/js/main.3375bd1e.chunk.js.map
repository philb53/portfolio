{"version":3,"sources":["Portfolio-menu.js","portfoliodirectory.js","footer.js","logoreel.js","about.js","App.js","serviceWorker.js","index.js"],"names":["PortfolioItem","imageUrl","size","summary","subtitle","className","style","backgroundImage","sections","title","id","Directory","map","key","Footer","display","gridTemplateColumns","gridGap","marginLeft","href","marginTop","Date","getFullYear","Logos","src","alt","About","App","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3375bd1e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './portfolio-menu.styles.scss';\r\n\r\nconst PortfolioItem = ({ imageUrl, size, summary, subtitle }) => (\r\n  <div className={`${size} portfolio-item`}>\r\n    <div\r\n      className='background-image'\r\n      style={{\r\n        backgroundImage: `url(${imageUrl})`\r\n      }}\r\n    />\r\n    <div className='content'>\r\n    <h1 className='title'>{summary}</h1>\r\n    <p className='subtitle'>{subtitle}</p>\r\n    </div> \r\n    </div>\r\n);\r\n\r\nexport default PortfolioItem;","import React from 'react';\r\n\r\nimport PortfolioItem from './Portfolio-menu';\r\n\r\nimport './directory.styles.scss';\r\n\r\n\r\n       const sections = [\r\n          {\r\n            title: 'ex1',\r\n            imageUrl: 'https://i.imgur.com/WTmppKM.png',\r\n            id: 1,\r\n            summary: 'Crown Clothing',\r\n            subtitle: 'e-commerce platform with full stripe integration and NoSQL (firebase) database with user sign in and google oAuth.  Latest react features (inc hooks), Redux,, firebase, SCSS, Thunk'\r\n\r\n          },\r\n          {\r\n            title: 'ex2',\r\n            imageUrl: 'https://i.imgur.com/USYltDH.png',\r\n            id: 2,\r\n            summary: 'Smart Brain',\r\n            subtitle: 'Facial recognition web app. Client side vision api integration. Backend node/express server withSQL database for user authentication and client tracking site statistics.'\r\n          },\r\n          {\r\n            title: 'ex2',\r\n            imageUrl: 'https://i.imgur.com/9y3DClh.png',\r\n            id: 4,\r\n            summary: 'Robofriends',\r\n            subtitle: 'Webapp with searchable and filterable contact cards featuring API generated Robots as avatars'\r\n          }\r\n   \r\n        ];\r\n\r\nconst Directory = () => {\r\n  return (\r\n    <div className=\"Portfolio-menu\">\r\n      {sections.map(({ imageUrl, id, size, summary, subtitle }) => (\r\n        <PortfolioItem \r\n          key={id}\r\n          imageUrl={imageUrl}\r\n          size={size}\r\n          summary={summary}\r\n          subtitle={subtitle}\r\n          />))}\r\n          \r\n          </div>\r\n          );\r\n        };\r\n\r\n    \r\n  \r\n  export default Directory;","import React from \"react\"\r\nimport \"./footer.css\";\r\n \r\nconst Footer = () =>  {\r\n  return (\r\n<div className=\"main-footer\">\r\n    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(3, 1fr)\", gridGap: 20 }}>\r\n                {/* column1 */}\r\n                <div><h4 style={{marginLeft: \"100px\"}}><a href=\"https://github.com/philb53\">Github</a></h4>\r\n                </div>\r\n                \r\n            {/* column2 */}\r\n                <div>\r\n                    <h4 style={{marginLeft: \"100px\"}}> CONTACT &nbsp;&nbsp;|&nbsp; <a href=\"https://www.linkedin.com/in/philip-baker-32915464/\">LinkedIn</a>&nbsp;|&nbsp;<a href=\"https://twitter.com/Philip_Baker1\">@Philip_Baker1</a></h4>\r\n                     \r\n                </div>\r\n            {/* /* column3 */}\r\n            <div style={{marginLeft: \"30px\", marginTop: \"20px\"}}>\r\n            &copy;{new Date().getFullYear()} | PHILIP BAKER | Available for employment opportunities\r\n            </div>\r\n    </div>\r\n\r\n     \r\n</div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from \"react\"\r\nimport \"./logos.css\";\r\n \r\nconst Logos = () =>  {\r\n  return (\r\n<div className=\"logo-container\">\r\n    <img className=\"logo-reel\"\r\n        src=\"https://i.imgur.com/xweUCmF.png\"\r\n        alt=\"reactlogo\"\r\n        />\r\n    <img className=\"logo-reel\"\r\n        src=\"https://i.imgur.com/F9SioaX.png\"\r\n        alt=\"htmlogo\"\r\n        />\r\n        <img className=\"logo-reel\"\r\n        src=\"https://imgur.com/F0zSaOH.png\"\r\n        alt=\"javascript\"\r\n        />\r\n        <img className=\"logo-reel\"\r\n        src=\"https://cdn4.iconfinder.com/data/icons/social-media-logos-6/512/121-css3-512.png\"\r\n        alt=\"csslogo\"\r\n        />\r\n   \r\n    \r\n    <img className=\"logo-reel\"\r\n        src=\"https://i.imgur.com/Bbz5czP.png\"\r\n        alt=\"nodelogo\"\r\n        />\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Logos;","import React from \"react\";\r\nimport \"./about.styles.css\";\r\n \r\nconst About = () => {\r\n  return (\r\n    <div className=\"about-container\">\r\n      <div className=\"about-1\"> Hi, my name is Phil. I design websites, <br></br> webapps and apps. You can see <br></br>some of my work below...\r\n       </div>\r\n        <div className=\"vl\"></div>\r\n      <div className=\"about-2\">Self taught full stack javascript engineer with latest <br></br> React and node.js knowledge</div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default About;","import React from 'react';\nimport { BrowserRouter} from 'react-router-dom'; \nimport { HashLink as Link } from 'react-router-hash-link';\n\nimport Directory from './portfoliodirectory.js';\nimport Footer from './footer.js';\n\nimport './App.css';\nimport Logos from './logoreel.js';\nimport About from './about.js';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div id= \"home\">\n          <div className=\"navigation-container\">\n            <div className=\"navigation\">\n                <Link to=\"/pathLink#home\" className=\"item\">\n                home\n                </Link>\n                <Link to=\"/pathLink#projects\" className=\"item\">\n                projects\n                </Link>\n                <Link to=\"/pathLink#contact\" className=\"item\">\n                contact\n                </Link>\n                <div className=\"animation start-home\"></div>\n              </div>\n            </div>\n            </div>\n        <div className=\"main\">\n        <About />\n        <div id= \"projects\">\n        </div>\n        <Directory />\n        <Logos />\n        </div>\n        <div id= \"contact\">\n        <Footer />\n        </div>\n    </BrowserRouter>\n   \n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}